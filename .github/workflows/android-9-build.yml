# SPDX-FileCopyrightText: 2022 yuzu Emulator Project
# SPDX-License-Identifier: GPL-3.0-or-later

name: 'suyu-android-9-build'

on:
 workflow_dispatch:
  push:
    tags: [ "*" ]
    schedule:
    - cron: "0 0 * * *"
  
jobs:
  android:
    runs-on: ubuntu-latest
    environment: Android9
    permissions: write-all
    if: ${{github.repository == 'XJustFineYouX/suyu' }}
    steps:
      - name: 'Show If New Changes'
        run: echo ${{ needs.syncro.outputs.isUpdated }}
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Modify Min Android 9
        run: |
            sed -i "s+minSdk = 30+minSdk = 28+" src/android/app/build.gradle.kts
            sed -i "s+BUILD_FLAVOR=\"mainline\"+BUILD_FLAVOR=\"mainline\"+" .ci/scripts/android/build.sh
            sed -i "s+BUILD_FLAVOR=\"mainline\"+BUILD_FLAVOR=\"mainline\"+" .ci/scripts/android/upload.sh
            sed -i "s+#ifndef _GNU_SOURCE+#ifdef ANDROID\n#include <android/sharedmem.h>\n#endif\n#ifndef _GNU_SOURCE+" src/common/host_memory.cpp
            sed -i "s+#if defined(__FreeBSD__) +#ifdef ANDROID\n\t\tfd = ASharedMemory_create(\"HostMemory\", backing_size);\n#elif  define(__FreeBSD__) +" src/common/host_memory.cpp
            sed -i "s+// Defined to extend the file with zeros+\n#ifndef ANDROID\n// Defined to extend the file with zeros+" src/common/host_memory.cpp
            sed -i "s+backing_base = static_cast<u8\\*>(pfn_VirtualAlloc2+backing_base = static_castd<u8\\*>(pfn_VirtualAlloc2+" src/common/host_memory.cpp
            sed -i "s+backing_base = static_cast<u8\\*>(+\n#endif\n\n\t\tbacking_base = static_cast<u8\\*>(+" src/common/host_memory.cpp
            sed -i "s+backing_base = static_castd<u8\\*>(pfn_VirtualAlloc2+backing_base = static_cast<u8\\*>(pfn_VirtualAlloc2+" src/common/host_memory.cpp
            cat src/common/host_memory.cpp
            
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Set up cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.ccache
          key: ${{ runner.os }}-android-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-android-
      - name: Query tag name
        uses: olegtarasov/get-tag@v2.1.2
        id: tagName
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y ccache apksigner glslang-dev glslang-tools
      - name: Build
        run: ./.ci/scripts/android/build.sh
        env:
          ANDROID_KEYSTORE_B64: ${{ secrets.ANDROID_KEYSTORE_B64 }}
          ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          ANDROID_KEYSTORE_PASS: ${{ secrets.ANDROID_KEYSTORE_PASS }}
      - name: Copy artifacts
        run: ./.ci/scripts/android/upload.sh
      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: android
          path: artifacts/
          
  # release steps
  release-android:
    runs-on: ubuntu-latest
    environment: Android9
    needs: [android]
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    permissions: write-all
    steps:
      - uses: actions/download-artifact@v3
      - name: Query tag name
        uses: olegtarasov/get-tag@v2.1.2
        id: tagName
      - name: Create release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tagName.outputs.tag }}
          release_name: ${{ steps.tagName.outputs.tag }}
          draft: false
          prerelease: false
      - name: Upload artifacts
        uses: alexellis/upload-assets@0.2.3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          asset_paths: '["./**/*.apk","./**/*.aab"]'
